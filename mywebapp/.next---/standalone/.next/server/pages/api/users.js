"use strict";(()=>{var e={};e.id=2829,e.ids=[2829],e.modules={8013:e=>{e.exports=require("mongodb")},614:e=>{e.exports=require("next-auth/jwt")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},5675:(e,t,a)=>{a.r(t),a.d(t,{config:()=>c,default:()=>l,routeModule:()=>m});var r={};a.r(r),a.d(r,{default:()=>d});var s=a(1802),n=a(7153),o=a(6249),i=a(3919),u=a(614);async function handler(e,t){let a;let r=await (0,u.getToken)({req:e});if(!r){t.status(200).json({ok:!0,status:401,error:"Not authenticated!"});return}let s=r.name;if("admin"!==s){t.status(200).json({ok:!0,status:401,error:"Not authenticated!"});return}try{a=await (0,i.T)()}catch(e){t.status(200).json({ok:!0,status:500,error:"Connecting to the database failed."});return}try{let e=a.db(),r=await e.collection("users").find({},{projection:{_id:1,domainName:1,email:1,username:1,domainName:1,inactive:1}}).sort({_id:-1}).toArray();r.find(e=>"admin"==e.username).domainName=process.env.MAIN_HOST,await a.close(),t.status(200).json({ok:!0,status:200,users:r})}catch(e){await a.close(),t.status(500).json({ok:!0,status:500,error:"Something went wrong."})}}let d=handler,l=(0,o.l)(r,"default"),c=(0,o.l)(r,"config"),m=new s.PagesAPIRouteModule({definition:{kind:n.x.PAGES_API,page:"/api/users",pathname:"/api/users",bundlePath:"",filename:""},userland:r})}};var t=require("../../webpack-api-runtime.js");t.C(e);var __webpack_exec__=e=>t(t.s=e),a=t.X(0,[4222,3919],()=>__webpack_exec__(5675));module.exports=a})();