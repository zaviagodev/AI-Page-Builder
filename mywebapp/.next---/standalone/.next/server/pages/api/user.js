"use strict";(()=>{var e={};e.id=5541,e.ids=[5541],e.modules={8013:e=>{e.exports=require("mongodb")},614:e=>{e.exports=require("next-auth/jwt")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},1870:(e,t,a)=>{a.r(t),a.d(t,{config:()=>c,default:()=>d,routeModule:()=>m});var s={};a.r(s),a.d(s,{default:()=>l});var r=a(1802),o=a(7153),n=a(6249),i=a(3919),u=a(614);async function handler(e,t){let a;let s=await (0,u.getToken)({req:e});if(!s){t.status(200).json({ok:!0,status:401,error:"Not authenticated!"});return}let r=s.name;try{a=await (0,i.T)()}catch(e){t.status(200).json({ok:!0,status:500,error:"Connecting to the database failed."});return}if("POST"===e.method){let s=JSON.parse(e.body),o=s.email;if(!o||!o.includes("@")){t.status(200).json({ok:!0,status:422,error:"Invalid email format."});return}try{let e=a.db(),s=await e.collection("users").findOne({username:r});s&&await e.collection("users").updateOne({username:r},{$set:{email:o}}),await a.close(),t.status(200).json({ok:!0,status:200,email:o})}catch(e){await a.close(),t.status(200).json({ok:!0,status:500,error:"Something went wrong."})}}else try{let e=a.db(),s=await e.collection("users").findOne({username:r});if(!s){a.close(),t.status(200).json({ok:!0,status:401,error:"User not found."});return}let o=s.email;await a.close(),t.status(200).json({ok:!0,status:200,email:o})}catch(e){await a.close(),t.status(500).json({ok:!0,status:500,error:"Something went wrong."})}}let l=handler,d=(0,n.l)(s,"default"),c=(0,n.l)(s,"config"),m=new r.PagesAPIRouteModule({definition:{kind:o.x.PAGES_API,page:"/api/user",pathname:"/api/user",bundlePath:"",filename:""},userland:s})}};var t=require("../../webpack-api-runtime.js");t.C(e);var __webpack_exec__=e=>t(t.s=e),a=t.X(0,[4222,3919],()=>__webpack_exec__(1870));module.exports=a})();