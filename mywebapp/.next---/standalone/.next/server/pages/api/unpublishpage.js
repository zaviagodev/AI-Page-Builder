"use strict";(()=>{var e={};e.id=7346,e.ids=[7346],e.modules={8013:e=>{e.exports=require("mongodb")},614:e=>{e.exports=require("next-auth/jwt")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},7511:(e,t,a)=>{a.r(t),a.d(t,{config:()=>p,default:()=>d,routeModule:()=>c});var s={};a.r(s),a.d(s,{default:()=>l});var r=a(1802),n=a(7153),o=a(6249),i=a(3919),u=a(614);async function handler(e,t){let a=await (0,u.getToken)({req:e});if(!a){t.status(200).json({ok:!0,status:401,error:"Not authenticated!"});return}let s=a.name;if("POST"===e.method){let a;let r=JSON.parse(e.body),n=r.slug;try{a=await (0,i.T)()}catch(e){t.status(200).json({ok:!0,status:500,error:"Connecting to the database failed."});return}try{let e=a.db(),r={slug:n,username:s};await e.collection("pages_published").deleteOne(r),await e.collection("pages").updateOne(r,{$set:{online:!1}}),await a.close(),t.status(200).json({ok:!0,status:200})}catch(e){await a.close(),t.status(200).json({ok:!0,status:500,error:"Something went wrong."})}}}let l=handler,d=(0,o.l)(s,"default"),p=(0,o.l)(s,"config"),c=new r.PagesAPIRouteModule({definition:{kind:n.x.PAGES_API,page:"/api/unpublishpage",pathname:"/api/unpublishpage",bundlePath:"",filename:""},userland:s})}};var t=require("../../webpack-api-runtime.js");t.C(e);var __webpack_exec__=e=>t(t.s=e),a=t.X(0,[4222,3919],()=>__webpack_exec__(7511));module.exports=a})();