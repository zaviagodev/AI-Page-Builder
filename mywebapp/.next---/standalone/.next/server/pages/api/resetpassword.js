"use strict";(()=>{var e={};e.id=4046,e.ids=[4046],e.modules={8013:e=>{e.exports=require("mongodb")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6910:(e,t,s)=>{s.r(t),s.d(t,{config:()=>c,default:()=>u,routeModule:()=>p});var a={};s.r(a),s.d(a,{default:()=>l});var r=s(1802),o=s(7153),n=s(6249),i=s(3919),d=s(9059);async function handler(e,t){if("POST"===e.method){let s;let a=JSON.parse(e.body),r=a.token,o=a.password;if(!o||o.trim().length<7){t.status(200).json({ok:!0,status:422,error:"Invalid input - password should be at least 7 characters long."});return}try{s=await (0,i.T)()}catch(e){t.status(200).json({ok:!0,status:500,error:"Connecting to the database failed."});return}try{let e=s.db(),a=await e.collection("tokens").findOne({passwordResetToken:r});if(a){if(Date.now()<=a.passwordResetExpire){let n=await (0,d.c)(o),i={email:a.email};await e.collection("users").updateOne(i,{$set:{password:n}}),await e.collection("tokens").deleteOne({passwordResetToken:r}),await s.close(),t.status(200).json({ok:!0,status:200})}else await s.close(),t.status(200).json({ok:!0,status:401,error:"Request expired."})}else await s.close(),t.status(200).json({ok:!0,status:401,error:"Request failed."})}catch(e){await s.close(),t.status(200).json({ok:!0,status:500,error:"Something went wrong."})}}}let l=handler,u=(0,n.l)(a,"default"),c=(0,n.l)(a,"config"),p=new r.PagesAPIRouteModule({definition:{kind:o.x.PAGES_API,page:"/api/resetpassword",pathname:"/api/resetpassword",bundlePath:"",filename:""},userland:a})},9059:(e,t,s)=>{s.d(t,{c:()=>hashPassword,G:()=>verifyPassword});let a=require("bcryptjs");async function hashPassword(e){let t=await (0,a.hash)(e,12);return t}async function verifyPassword(e,t){let s=await (0,a.compare)(e,t);return s}}};var t=require("../../webpack-api-runtime.js");t.C(e);var __webpack_exec__=e=>t(t.s=e),s=t.X(0,[4222,3919],()=>__webpack_exec__(6910));module.exports=s})();