"use strict";(()=>{var e={};e.id=8586,e.ids=[8586],e.modules={8013:e=>{e.exports=require("mongodb")},614:e=>{e.exports=require("next-auth/jwt")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},449:(e,t,a)=>{a.r(t),a.d(t,{config:()=>d,default:()=>m,routeModule:()=>c});var r={};a.r(r),a.d(r,{default:()=>u});var s=a(1802),i=a(7153),o=a(6249),n=a(3919),l=a(614);async function handler(e,t){let a=await (0,l.getToken)({req:e});if(!a){t.status(200).json({ok:!0,status:401,error:"Not authenticated!"});return}let r=a.name;if("POST"===e.method){let a;let s=JSON.parse(e.body),i=s.mailSmtp,o=s.mailPort,l=s.mailUser,u=s.mailPassword,m=s.mailFrom,d=s.mailName;try{a=await (0,n.T)()}catch(e){t.status(200).json({ok:!0,status:500,error:"Connecting to the database failed."});return}try{let e=a.db(),s=await e.collection("users").findOne({username:r});s&&await e.collection("users").updateOne({username:r},{$set:{mailSmtp:i,mailPort:o,mailUser:l,mailPassword:u,mailFrom:m,mailName:d}}),await a.close(),t.status(200).json({ok:!0,status:200})}catch(e){await a.close(),t.status(200).json({ok:!0,status:500,error:"Something went wrong."})}}}let u=handler,m=(0,o.l)(r,"default"),d=(0,o.l)(r,"config"),c=new s.PagesAPIRouteModule({definition:{kind:i.x.PAGES_API,page:"/api/sitemail",pathname:"/api/sitemail",bundlePath:"",filename:""},userland:r})}};var t=require("../../webpack-api-runtime.js");t.C(e);var __webpack_exec__=e=>t(t.s=e),a=t.X(0,[4222,3919],()=>__webpack_exec__(449));module.exports=a})();