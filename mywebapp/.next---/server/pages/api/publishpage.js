"use strict";(()=>{var e={};e.id=1779,e.ids=[1779],e.modules={8013:e=>{e.exports=require("mongodb")},614:e=>{e.exports=require("next-auth/jwt")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},4466:(e,t,a)=>{a.r(t),a.d(t,{config:()=>p,default:()=>d,routeModule:()=>c});var s={};a.r(s),a.d(s,{default:()=>u});var n=a(1802),i=a(7153),l=a(6249),r=a(3919),o=a(614);async function handler(e,t){let a=await (0,o.getToken)({req:e});if(!a){t.status(200).json({ok:!0,status:401,error:"Not authenticated!"});return}let s=a.name;if("POST"===e.method){let a;let n=JSON.parse(e.body),i=n.slug;try{a=await (0,r.T)()}catch(e){t.status(200).json({ok:!0,status:500,error:"Connecting to the database failed."});return}try{let e=a.db(),n=await e.collection("pages").find({slug:i,username:s}).toArray(),l=await e.collection("pages_published").find({slug:i,username:s}).toArray();if(0===l.length){let t=n[0];delete t.online,delete t._id,await e.collection("pages_published").insertOne(t)}else{let t=n[0];delete t.online,delete t._id,await e.collection("pages_published").updateOne({slug:i,username:s},{$set:t})}await e.collection("pages").updateOne({slug:i,username:s},{$set:{online:!0}}),await a.close(),t.status(200).json({ok:!0,status:200})}catch(e){await a.close(),t.status(200).json({ok:!0,status:500,error:"Something went wrong."})}}}let u=handler,d=(0,l.l)(s,"default"),p=(0,l.l)(s,"config"),c=new n.PagesAPIRouteModule({definition:{kind:i.x.PAGES_API,page:"/api/publishpage",pathname:"/api/publishpage",bundlePath:"",filename:""},userland:s})}};var t=require("../../webpack-api-runtime.js");t.C(e);var __webpack_exec__=e=>t(t.s=e),a=t.X(0,[4222,3919],()=>__webpack_exec__(4466));module.exports=a})();