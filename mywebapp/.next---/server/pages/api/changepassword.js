"use strict";(()=>{var e={};e.id=5742,e.ids=[5742],e.modules={8013:e=>{e.exports=require("mongodb")},614:e=>{e.exports=require("next-auth/jwt")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},1223:(e,t,a)=>{a.r(t),a.d(t,{config:()=>p,default:()=>c,routeModule:()=>w});var s={};a.r(s),a.d(s,{default:()=>l});var r=a(1802),o=a(7153),n=a(6249),i=a(3919),u=a(614),d=a(9059);async function handler(e,t){let a=await (0,u.getToken)({req:e});if(!a){t.status(200).json({ok:!0,status:401,error:"Not authenticated!"});return}let s=a.name;if("POST"===e.method){let a;let r=JSON.parse(e.body),o=r.password;if(!o||o.trim().length<7){t.status(200).json({ok:!0,status:422,error:"Invalid input - password should be at least 7 characters long."});return}try{a=await (0,i.T)()}catch(e){t.status(200).json({ok:!0,status:500,error:"Connecting to the database failed."});return}let n=await (0,d.c)(o);try{let e=a.db(),r=await e.collection("users").findOne({username:s});r&&await e.collection("users").updateOne({username:s},{$set:{password:n}}),await a.close(),t.status(200).json({ok:!0,status:200})}catch(e){await a.close(),t.status(200).json({ok:!0,status:500,error:"Something went wrong."})}}}let l=handler,c=(0,n.l)(s,"default"),p=(0,n.l)(s,"config"),w=new r.PagesAPIRouteModule({definition:{kind:o.x.PAGES_API,page:"/api/changepassword",pathname:"/api/changepassword",bundlePath:"",filename:""},userland:s})},9059:(e,t,a)=>{a.d(t,{c:()=>hashPassword,G:()=>verifyPassword});let s=require("bcryptjs");async function hashPassword(e){let t=await (0,s.hash)(e,12);return t}async function verifyPassword(e,t){let a=await (0,s.compare)(e,t);return a}}};var t=require("../../webpack-api-runtime.js");t.C(e);var __webpack_exec__=e=>t(t.s=e),a=t.X(0,[4222,3919],()=>__webpack_exec__(1223));module.exports=a})();